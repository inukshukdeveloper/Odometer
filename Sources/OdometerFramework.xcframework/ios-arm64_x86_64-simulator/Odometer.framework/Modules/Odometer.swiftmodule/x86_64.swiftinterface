// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
// swift-module-flags: -target x86_64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name Odometer
import Foundation
@_exported import Odometer
import Swift
import UIKit
public enum OdometerError : Swift.Error {
  case InvalidDigitNum
  case InvalidFontSize
  case InvalidMileage
  public static func == (a: Odometer.OdometerError, b: Odometer.OdometerError) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
  public func hash(into hasher: inout Swift.Hasher)
}
@objc public class OdometerView : UIKit.UIView {
  public var fontSize: CoreGraphics.CGFloat
  public init(frame: CoreGraphics.CGRect, digitNum: Swift.Int, fontsize: CoreGraphics.CGFloat) throws
  @objc required dynamic public init?(coder aDecoder: Foundation.NSCoder)
  public func updateMileage(mileage: Swift.Int, spin: Swift.Bool = false, maxSpinTime: Swift.Double = 10.0) throws
  @objc deinit
  @objc override dynamic public init(frame: CoreGraphics.CGRect)
}
extension Odometer.OdometerError : Swift.Equatable {}
extension Odometer.OdometerError : Swift.Hashable {}
